{
  "Routes": [
    //Consumer Calls
    {
      "ServiceName": "consumerservice",
      "DownstreamPathTemplate": "/consumer/register",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/consumer-register",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "consumerservice",
      "DownstreamPathTemplate": "/consumer/editProfile/{consumerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/consumer-editProfile/{consumerId}",
      "UpstreamHttpMethod": [ "Put" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "consumerservice",
      "DownstreamPathTemplate": "/consumer/getConsumerDetails/{consumerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getConsumerDetails/{consumerId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getAllRaisedServiceRequests/{consumerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllRaisedServiceRequests/{consumerId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getRaisedServiceRequestDetails/{requestId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getRaisedServiceRequestDetails/{requestId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/postRaiseServiceRequest",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/raiseServiceRequest",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/cancelRaiseServiceRequest/{requestId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/cancelServiceRequest/{requestId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/makePayment",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/makePayment",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },

    // Provider Calls
    {
      "ServiceName": "providerservice",
      "DownstreamPathTemplate": "/provider/register",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/provider-register",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "providerservice",
      "DownstreamPathTemplate": "/provider/editProfile/{providerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/provider-editProfile/{providerId}",
      "UpstreamHttpMethod": [ "Put" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "providerservice",
      "DownstreamPathTemplate": "/provider/getProviderDetails/{providerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getProviderDetails/{providerId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getServiceRequestInfo/{providerId}?requestStatus={requestStatus}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getServiceRequestInfo/{providerId}?requestStatus={requestStatus}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "adminservice",
      "DownstreamPathTemplate": "/admin/serviceRequestAcceptOrDeny",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/serviceRequestAcceptOrDeny",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getJobDescription/{requestId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getJobDescription/{requestId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },

    //// Admin Calls
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getAllRaisedRequestDetailsByStatus/{requestStatus}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllRaisedRequestDetailsByStatus/{requestStatus}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/getAllRaisedRequestDetails",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllRaisedRequestDetails",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "providerservice",
      "DownstreamPathTemplate": "/provider/getAllAvailableProviderDetails/{locationId}?serviceId={serviceId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllAvailableProviderDetails/{locationId}?serviceId={serviceId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ordermanagementservice",
      "DownstreamPathTemplate": "/order/assignProviderToServiceRequest?requestId={requestId}&providerId={providerId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/assignProviderToServiceRequest?requestId={requestId}&providerId={providerId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "adminservice",
      "DownstreamPathTemplate": "/admin/getAllAcceptedRequestByProviders/{requestId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllAcceptedRequestByProviders/{requestId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "adminservice",
      "DownstreamPathTemplate": "/admin/sendNotificationToMatchedProviders/{requestId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/sendNotificationToMatchedProviders/{requestId}",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/location/addLocation",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/location/addLocation",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/location/getAllLocation",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/location/getAllLocation",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/ondemandservice/addService",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/addService",
      "UpstreamHttpMethod": [ "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/ondemandservice/activateService/{serviceId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/activateService/{serviceId}",
      "UpstreamHttpMethod": [ "Put" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/ondemandservice/deactivateService/{serviceId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/deactivateService/{serviceId}",
      "UpstreamHttpMethod": [ "Put" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/ondemandservice/getAllServicesByLocation/{locationId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAllServicesByLocation/{locationId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    },
    {
      "ServiceName": "ondemandservice",
      "DownstreamPathTemplate": "/ondemandservice/getAvailableServicesByLocation/{locationId}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/getAvailableServicesByLocation/{locationId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2,
        "DurationOfBreak": 60000,
        "TimeoutValue": 20000
      }
    }
  ],
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Host": "service-registry",
      "Port": 8500
    }
  }
}